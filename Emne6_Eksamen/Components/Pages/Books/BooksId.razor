@inject IBooksService BooksService
@using Emne6_Eksamen.Components.Pages.Interfaces

@page "/Book/{id:int}"


@if (loaded)
{
    @if (bookData != null)
    {
        <p>ID: @bookData.id</p>
        <h3>Title: @bookData.title</h3>
        <p>Author: @bookData.author</p>
        <p>Publication Date: @bookData.publication_date</p>

        @if (charactersData.Any())
        {
            <p>Characters: </p>
            foreach (var character in charactersData)
            {
                <li>@character.name</li>
            }
        }
        else
        {
            <P>Characters: Something went wrong when getting the data</P>
        }
    }
    else
    {
        <p>No data...</p>
    }
}
else
{
    <p>Loading...</p>
}



@code {

    [Parameter]
    public int id { get; set; }

    bool loaded = false;
    private List<CharactersCharData> charactersData;
    private BooksData bookData;

    protected override async Task OnInitializedAsync()
    {
        loaded = false;
        try
        {
            bookData = BooksService.GetByID(id);
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error: {e}");
            bookData = new BooksData();
        }
        

        if (bookData != null)
        {
            var charTask = BooksService.GetCharactersAsync(bookData.characters);

            await Task.WhenAll(charTask);

            charactersData = await charTask;

        }
        
        loaded = true;
    }

}